using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Npgsql;

namespace WindowsFormsApp1
{
    public partial class Signup : Form
    {
        // 데이터베이스 연결 문자열
        private const string StrConnection = "Server=localhost;Port=5432;User Id=postgres;Password=5130;Database=NeighborChat;";

        // NpgsqlConnection 객체
        private NpgsqlConnection nConnect;

        // 폼을 초기화하는 생성자
        public Signup()
        {
            InitializeComponent();
        }

        // 데이터베이스에 연결하는 메서드
        private void ConnectToDatabase()
        {
            if (nConnect != null && nConnect.State == ConnectionState.Open)
            {
                return; // 이미 연결되어 있으면 조기 반환
            }

            nConnect = new NpgsqlConnection(StrConnection);

            try
            {
                nConnect.Open();
            }
            catch (Exception ex)
            {
                MessageBox.Show($"데이터베이스 연결 오류: {ex.Message}", "오류", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        // '완료' 버튼 클릭 시 호출되는 이벤트 핸들러
        private void btnDone_Click(object sender, EventArgs e)
        {
            // 사용자 입력 가져오기
            string id = tbID.Text.Trim();
            string pw = tbPW.Text.Trim();
            string dpt = tbDpt.Text.Trim();
            string pn = tbPN.Text.Trim();

            // ID와 비밀번호가 비어 있는지 확인
            if (string.IsNullOrWhiteSpace(id) || string.IsNullOrWhiteSpace(pw))
            {
                MessageBox.Show("아이디와 비밀번호를 입력해 주세요.", "입력 오류", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return; // 입력이 부족하면 메서드를 종료
            }

            try
            {
                // 데이터베이스에 연결
                ConnectToDatabase();

                // 입력된 데이터를 데이터베이스에 삽입
                InsertData("INSERT INTO signup (id, pw, department, phonenumber) VALUES (@id, @pw, @dpt, @pn);", id, pw, dpt, pn);
                MessageBox.Show("회원가입이 완료되었습니다.", "완료", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            catch (Exception ex)
            {
                MessageBox.Show($"회원가입 오류: {ex.Message}", "오류", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                // 데이터베이스 연결을 닫음
                nConnect?.Close();
            }

            // 폼을 닫음
            this.Close();
        }

        // 데이터베이스에 데이터를 삽입하는 메서드
        private void InsertData(string sql, string id, string pw, string dpt, string pn)
        {
            try
            {
                using (var nCommand = new NpgsqlCommand(sql, nConnect))
                {
                    nCommand.Parameters.AddWithValue("@id", id);
                    nCommand.Parameters.AddWithValue("@pw", pw);
                    nCommand.Parameters.AddWithValue("@dpt", dpt);
                    nCommand.Parameters.AddWithValue("@pn", pn);

                    nCommand.ExecuteNonQuery();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"데이터 삽입 오류: {ex.Message}", "오류", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }
    }


}
